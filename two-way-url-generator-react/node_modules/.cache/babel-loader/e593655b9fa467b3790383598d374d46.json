{"ast":null,"code":"import _defineProperty from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './style/gui.css'; // Components\n\nimport ControlledRow from 'components/ControlledRow';\nimport DragDropSection from 'components/DragDropSection';\nimport DragDropColumn from 'components/DragDropColumn'; // functions\n\nimport HashString from 'functions/HashString';\nimport UrlParamaters from 'functions/UrlParamaters'; // feeds\n\nimport snippetsStructured from 'feed/snippetsStructured';\nimport summariesStructured from 'feed/summariesStructured';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentDidMount = function () {\n      // to cut out some weird mutable data issues - clone the original data\n      _this.snippetsMaster = JSON.parse(JSON.stringify(snippetsStructured));\n      _this.summariesMaster = JSON.parse(JSON.stringify(summariesStructured));\n    };\n\n    _this.onClearUrl = function (e) {\n      _this.setState({\n        inputUrl: ''\n      });\n    };\n\n    _this.onEncodeUrl = function (e) {\n      var codedSummary = HashString.encode('first');\n      var codedItems = HashString.encode(_this.state.snippets.columns.col1.itemIds);\n      var codedUrl = UrlParamaters.stringify({\n        summary: codedSummary,\n        items: codedItems\n      });\n      UrlParamaters.objectify(codedUrl);\n      alert(codedUrl);\n    };\n\n    _this.onDecodeUrl = function (e) {\n      var retreivedItemsList, retreivedItemsIds; // retreive items from the URL\n\n      if (_this.state.inputUrl) {\n        retreivedItemsList = UrlParamaters.objectify(_this.state.inputUrl).items || '';\n        retreivedItemsIds = HashString.decode(retreivedItemsList).split(',');\n      } else {\n        console.log('ERROR in URL');\n        return;\n      } // TODO:\n      // 1. MUCH BETTER ERROR HANDLING FOR INPUT URLS\n      // 2. ACTUAL URL READER\n      // 3. SUMMARY CHOOSER AND DECODER\n      // reset so all data is back to first state\n\n\n      var snippets = JSON.parse(JSON.stringify(_this.snippetsMaster));\n      var availableItemsIds = Array.from(snippets.columns.col2.itemIds);\n      var selectedItemsIds = [];\n      retreivedItemsIds.map(function (item, index) {\n        // build selectedIds\n        selectedItemsIds.push(item); // remove from available Ids\n\n        availableItemsIds.splice(availableItemsIds.indexOf(item), 1);\n      });\n      snippets.columns.col1.itemIds = selectedItemsIds;\n      snippets.columns.col2.itemIds = availableItemsIds;\n\n      _this.setState({\n        snippets: snippets\n      });\n    };\n\n    _this.onInputUrl = function (e) {\n      _this.setState({\n        inputUrl: e.target.value\n      });\n    };\n\n    _this.onReset = function (e) {\n      console.log('THE WORLD EXPLODED');\n\n      _this.setState({\n        snippets: JSON.parse(JSON.stringify(_this.snippetsMaster))\n      });\n    };\n\n    _this.onCreateNew = function (e) {};\n\n    _this.onDragEnd = function (result) {\n      var _objectSpread3;\n\n      var destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId; // if no destination, do nothing\n\n      if (!destination) {\n        return;\n      } // if no change, do nothing\n\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      var start = _this.state.snippets.columns[source.droppableId];\n      var finish = _this.state.snippets.columns[destination.droppableId]; // moving within same column\n\n      if (start === finish) {\n        var newItemIds = Array.from(start.itemIds);\n        newItemIds.splice(source.index, 1);\n        newItemIds.splice(destination.index, 0, draggableId);\n\n        var newColumn = _objectSpread({}, start, {\n          itemIds: newItemIds\n        });\n\n        var _newSnippets = _objectSpread({}, _this.state.snippets, {\n          columns: _objectSpread({}, _this.state.snippets.columns, _defineProperty({}, newColumn.id, newColumn))\n        });\n\n        _this.setState({\n          snippets: _newSnippets\n        });\n\n        return;\n      } // moving to another column\n\n\n      var startItemIds = Array.from(start.itemIds);\n      startItemIds.splice(source.index, 1);\n\n      var newStart = _objectSpread({}, start, {\n        itemIds: startItemIds\n      });\n\n      var finishItemIds = Array.from(finish.itemIds);\n      finishItemIds.splice(destination.index, 0, draggableId);\n\n      var newFinish = _objectSpread({}, finish, {\n        itemIds: finishItemIds\n      });\n\n      var newSnippets = _objectSpread({}, _this.state.snippets, {\n        columns: _objectSpread({}, _this.state.snippets.columns, (_objectSpread3 = {}, _defineProperty(_objectSpread3, newStart.id, newStart), _defineProperty(_objectSpread3, newFinish.id, newFinish), _objectSpread3))\n      });\n\n      _this.setState({\n        snippets: newSnippets\n      });\n    };\n\n    _this.onCreateNew = function (e) {\n      _this.scrollToRef(_this.summaryRef);\n    };\n\n    _this.scrollToRef = function (elem) {\n      window.scrollTo({\n        top: elem.current.offsetTop,\n        behavior: 'smooth'\n      });\n    };\n\n    _this.state = {\n      snippets: snippetsStructured,\n      summaries: summariesStructured,\n      inputUrl: ''\n    };\n    _this.onDragEnd = _this.onDragEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onEncodeUrl = _this.onEncodeUrl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDecodeUrl = _this.onDecodeUrl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClearUrl = _this.onClearUrl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onReset = _this.onReset.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onCreateNew = _this.onCreateNew.bind(_assertThisInitialized(_assertThisInitialized(_this))); // scrolling and refs\n\n    _this.scrollToRef = _this.scrollToRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.welcomeRef = React.createRef();\n    _this.summaryRef = React.createRef();\n    _this.snippetRef = React.createRef();\n    debugger;\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"CAI URL / Brief Generator\"), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        ref: this.welcomeRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 col-md-offset-2 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Welcome to CAI the brief generator\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onCreateNew,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Create a new brief\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"or\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.onInputUrl,\n        value: this.state.inputUrl,\n        placeholder: \"Paste in exisitng URL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onDecodeUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Unscramble this URL\"), React.createElement(\"button\", {\n        onClick: this.onClearUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Clear\"), React.createElement(\"button\", {\n        onClick: this.onEncodeUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Done, create my URL\"), React.createElement(\"button\", {\n        onClick: this.onReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \" Reset \"))), React.createElement(\"div\", {\n        className: \"row\",\n        ref: this.summaryRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 col-md-offset-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"1. Select the summary you are creating for\"), this.state.summaries.columns.col2.itemIds.map(function (item) {\n        return item.intent;\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        ref: this.snippetRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 col-md-offset-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"2. Select and order the required snippets\"), React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, this.state.snippets.columnOrder.map(function (columnId) {\n        var column = _this2.state.snippets.columns[columnId];\n        var items = column.itemIds.map(function (itemId) {\n          return _this2.state.snippets.items[itemId];\n        });\n        return React.createElement(DragDropColumn, {\n          key: column.id,\n          column: column,\n          items: items,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/src/App.js"],"names":["React","Component","ReactDOM","DragDropContext","ControlledRow","DragDropSection","DragDropColumn","HashString","UrlParamaters","snippetsStructured","summariesStructured","App","props","componentDidMount","snippetsMaster","JSON","parse","stringify","summariesMaster","onClearUrl","e","setState","inputUrl","onEncodeUrl","codedSummary","encode","codedItems","state","snippets","columns","col1","itemIds","codedUrl","summary","items","objectify","alert","onDecodeUrl","retreivedItemsList","retreivedItemsIds","decode","split","console","log","availableItemsIds","Array","from","col2","selectedItemsIds","map","item","index","push","splice","indexOf","onInputUrl","target","value","onReset","onCreateNew","onDragEnd","result","destination","source","draggableId","droppableId","start","finish","newItemIds","newColumn","newSnippets","id","startItemIds","newStart","finishItemIds","newFinish","scrollToRef","summaryRef","elem","window","scrollTo","top","current","offsetTop","behavior","summaries","bind","welcomeRef","createRef","snippetRef","intent","columnOrder","columnId","column","itemId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport './style/gui.css'\n\n// Components\nimport ControlledRow from 'components/ControlledRow'\nimport DragDropSection from 'components/DragDropSection'\nimport DragDropColumn from 'components/DragDropColumn'\n\n// functions\nimport HashString from 'functions/HashString'\nimport UrlParamaters from 'functions/UrlParamaters'\n\n// feeds\nimport snippetsStructured from 'feed/snippetsStructured'\nimport summariesStructured from 'feed/summariesStructured'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            snippets: snippetsStructured,\n            summaries: summariesStructured,\n            inputUrl: '',\n        }\n\n        this.onDragEnd = this.onDragEnd.bind(this)\n        this.onEncodeUrl = this.onEncodeUrl.bind(this)\n        this.onDecodeUrl = this.onDecodeUrl.bind(this)\n        this.onClearUrl = this.onClearUrl.bind(this)\n        this.onReset = this.onReset.bind(this)\n        this.onCreateNew = this.onCreateNew.bind(this)\n\n        // scrolling and refs\n        this.scrollToRef = this.scrollToRef.bind(this)\n        this.welcomeRef = React.createRef()\n        this.summaryRef = React.createRef()\n        this.snippetRef = React.createRef()\n\n        debugger\n    }\n\n    componentDidMount = () => {\n        // to cut out some weird mutable data issues - clone the original data\n        this.snippetsMaster = JSON.parse(JSON.stringify(snippetsStructured))\n        this.summariesMaster = JSON.parse(JSON.stringify(summariesStructured))\n    }\n\n    onClearUrl = e => {\n        this.setState({\n            inputUrl: '',\n        })\n    }\n\n    onEncodeUrl = e => {\n        const codedSummary = HashString.encode('first')\n        const codedItems = HashString.encode(\n            this.state.snippets.columns.col1.itemIds\n        )\n        const codedUrl = UrlParamaters.stringify({\n            summary: codedSummary,\n            items: codedItems,\n        })\n\n        UrlParamaters.objectify(codedUrl)\n        alert(codedUrl)\n    }\n\n    // example url to test with ?summary=Zmlyc3Q=&items=c25pcDMsc25pcDE=\n\n    onDecodeUrl = e => {\n        let retreivedItemsList, retreivedItemsIds\n\n        // retreive items from the URL\n        if (this.state.inputUrl) {\n            retreivedItemsList =\n                UrlParamaters.objectify(this.state.inputUrl).items || ''\n            retreivedItemsIds = HashString.decode(retreivedItemsList).split(',')\n        } else {\n            console.log('ERROR in URL')\n            return\n        }\n\n        // TODO:\n        // 1. MUCH BETTER ERROR HANDLING FOR INPUT URLS\n        // 2. ACTUAL URL READER\n        // 3. SUMMARY CHOOSER AND DECODER\n\n        // reset so all data is back to first state\n        let snippets = JSON.parse(JSON.stringify(this.snippetsMaster))\n\n        let availableItemsIds = Array.from(snippets.columns.col2.itemIds)\n        let selectedItemsIds = []\n\n        retreivedItemsIds.map((item, index) => {\n            // build selectedIds\n            selectedItemsIds.push(item)\n            // remove from available Ids\n            availableItemsIds.splice(availableItemsIds.indexOf(item), 1)\n        })\n\n        snippets.columns.col1.itemIds = selectedItemsIds\n        snippets.columns.col2.itemIds = availableItemsIds\n\n        this.setState({\n            snippets: snippets,\n        })\n    }\n\n    onInputUrl = e => {\n        this.setState({\n            inputUrl: e.target.value,\n        })\n    }\n\n    onReset = e => {\n        console.log('THE WORLD EXPLODED')\n        this.setState({\n            snippets: JSON.parse(JSON.stringify(this.snippetsMaster)),\n        })\n    }\n\n    onCreateNew = e => {}\n\n    onDragEnd = result => {\n        const { destination, source, draggableId } = result\n\n        // if no destination, do nothing\n        if (!destination) {\n            return\n        }\n\n        // if no change, do nothing\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return\n        }\n\n        const start = this.state.snippets.columns[source.droppableId]\n        const finish = this.state.snippets.columns[destination.droppableId]\n\n        // moving within same column\n        if (start === finish) {\n            const newItemIds = Array.from(start.itemIds)\n            newItemIds.splice(source.index, 1)\n            newItemIds.splice(destination.index, 0, draggableId)\n\n            const newColumn = {\n                ...start,\n                itemIds: newItemIds,\n            }\n\n            const newSnippets = {\n                ...this.state.snippets,\n                columns: {\n                    ...this.state.snippets.columns,\n                    [newColumn.id]: newColumn,\n                },\n            }\n\n            this.setState({\n                snippets: newSnippets,\n            })\n            return\n        }\n\n        // moving to another column\n        const startItemIds = Array.from(start.itemIds)\n        startItemIds.splice(source.index, 1)\n        const newStart = {\n            ...start,\n            itemIds: startItemIds,\n        }\n\n        const finishItemIds = Array.from(finish.itemIds)\n        finishItemIds.splice(destination.index, 0, draggableId)\n        const newFinish = {\n            ...finish,\n            itemIds: finishItemIds,\n        }\n\n        const newSnippets = {\n            ...this.state.snippets,\n            columns: {\n                ...this.state.snippets.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            },\n        }\n\n        this.setState({\n            snippets: newSnippets,\n        })\n    }\n\n    onCreateNew = e => {\n        this.scrollToRef(this.summaryRef)\n    }\n\n    scrollToRef = elem => {\n        window.scrollTo({\n            top: elem.current.offsetTop,\n            behavior: 'smooth',\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    CAI URL / Brief Generator\n                </header>\n                <main>\n                    <div className=\"row\" ref={this.welcomeRef}>\n                        <div className=\"col-md-8 col-md-offset-2 text-center\">\n                            <h1>Welcome to CAI the brief generator</h1>\n                            <h3 />\n                            <button onClick={this.onCreateNew}>\n                                Create a new brief\n                            </button>\n                            <h3>or</h3>\n                            <input\n                                type=\"text\"\n                                onChange={this.onInputUrl}\n                                value={this.state.inputUrl}\n                                placeholder=\"Paste in exisitng URL\"\n                            />\n                            <button onClick={this.onDecodeUrl}>\n                                Unscramble this URL\n                            </button>\n                            <button onClick={this.onClearUrl}>Clear</button>\n\n                            <button onClick={this.onEncodeUrl}>\n                                Done, create my URL\n                            </button>\n\n                            <button onClick={this.onReset}> Reset </button>\n                        </div>\n                    </div>\n\n                    <div className=\"row\" ref={this.summaryRef}>\n                        <div className=\"col-md-8 col-md-offset-2\">\n                            <h2>1. Select the summary you are creating for</h2>\n                            {this.state.summaries.columns.col2.itemIds.map(\n                                item => {\n                                    return item.intent\n                                }\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"row\" ref={this.snippetRef}>\n                        <div className=\"col-md-8 col-md-offset-2\">\n                            <h2>2. Select and order the required snippets</h2>\n                            <DragDropContext onDragEnd={this.onDragEnd}>\n                                {this.state.snippets.columnOrder.map(\n                                    columnId => {\n                                        const column = this.state.snippets\n                                            .columns[columnId]\n                                        const items = column.itemIds.map(\n                                            itemId =>\n                                                this.state.snippets.items[\n                                                    itemId\n                                                ]\n                                        )\n\n                                        return (\n                                            <DragDropColumn\n                                                key={column.id}\n                                                column={column}\n                                                items={items}\n                                            />\n                                        )\n                                    }\n                                )}\n                            </DragDropContext>\n                        </div>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}