{"ast":null,"code":"import _defineProperty from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './style/gui.css'; // Components\n\nimport ControlledRow from 'components/ControlledRow';\nimport DragDropSection from 'components/DragDropSection';\nimport DragDropColumn from 'components/DragDropColumn'; // functions\n\nimport HashString from 'functions/HashString';\nimport UrlParamaters from 'functions/UrlParamaters'; // feeds\n\nimport snippetsStructured from 'feed/snippetsStructured'; // import contentSummariesJson from 'feed/summaries'\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentDidMount = function () {\n      // to cut out some weird mutable data issues - clone the original data\n      _this.snippetsMaster = JSON.parse(JSON.stringify(snippetsStructured));\n    };\n\n    _this.onEncodeUrl = function (e) {\n      var codedSummary = HashString.encode('first');\n      var codedItems = HashString.encode(_this.state.snippets.columns.col1.itemIds);\n      var codedUrl = UrlParamaters.stringify({\n        summary: codedSummary,\n        items: codedItems\n      });\n      UrlParamaters.objectify(codedUrl);\n      alert(codedUrl);\n    };\n\n    _this.onDecodeUrl = function (e) {\n      var retreivedItemsList, retreivedItemsIds; // retreive items from the URL\n\n      if (_this.state.inputUrl) {\n        retreivedItemsList = UrlParamaters.objectify(_this.state.inputUrl).items || '';\n        retreivedItemsIds = HashString.decode(retreivedItemsList).split(',');\n      } else {\n        console.log('ERROR in URL');\n        return;\n      } // TODO:\n      // 1. MUCH BETTER ERROR HANDLING FOR INPUT URLS\n      // 2. ACTUAL URL READER\n      // 3. SUMMARY CHOOSER AND DECODER\n      // reset so all data is back to first state\n\n\n      var snippets = JSON.parse(JSON.stringify(_this.snippetsMaster));\n      var availableItemsIds = Array.from(snippets.columns.col2.itemIds);\n      var selectedItemsIds = [];\n      retreivedItemsIds.map(function (item, index) {\n        // build selectedIds\n        selectedItemsIds.push(item); // remove from available Ids\n\n        availableItemsIds.splice(availableItemsIds.indexOf(item), 1);\n      });\n      snippets.columns.col1.itemIds = selectedItemsIds;\n      snippets.columns.col2.itemIds = availableItemsIds;\n\n      _this.setState({\n        snippets: snippets\n      });\n    };\n\n    _this.onInputUrl = function (e) {\n      _this.setState({\n        inputUrl: e.target.value\n      });\n    };\n\n    _this.onReset = function (e) {\n      console.log('THE WORLD EXPLODED');\n\n      _this.setState({\n        snippets: JSON.parse(JSON.stringify(_this.snippetsMaster))\n      });\n    };\n\n    _this.onDragEnd = function (result) {\n      var _objectSpread3;\n\n      var destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId; // if no destination, do nothing\n\n      if (!destination) {\n        return;\n      } // if no change, do nothing\n\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      var start = _this.state.snippets.columns[source.droppableId];\n      var finish = _this.state.snippets.columns[destination.droppableId]; // moving within same column\n\n      if (start === finish) {\n        var newItemIds = Array.from(start.itemIds);\n        newItemIds.splice(source.index, 1);\n        newItemIds.splice(destination.index, 0, draggableId);\n\n        var newColumn = _objectSpread({}, start, {\n          itemIds: newItemIds\n        });\n\n        var _newSnippets = _objectSpread({}, _this.state.snippets, {\n          columns: _objectSpread({}, _this.state.snippets.columns, _defineProperty({}, newColumn.id, newColumn))\n        });\n\n        _this.setState({\n          snippets: _newSnippets\n        });\n\n        return;\n      } // moving to another column\n\n\n      var startItemIds = Array.from(start.itemIds);\n      startItemIds.splice(source.index, 1);\n\n      var newStart = _objectSpread({}, start, {\n        itemIds: startItemIds\n      });\n\n      var finishItemIds = Array.from(finish.itemIds);\n      finishItemIds.splice(destination.index, 0, draggableId);\n\n      var newFinish = _objectSpread({}, finish, {\n        itemIds: finishItemIds\n      });\n\n      var newSnippets = _objectSpread({}, _this.state.snippets, {\n        columns: _objectSpread({}, _this.state.snippets.columns, (_objectSpread3 = {}, _defineProperty(_objectSpread3, newStart.id, newStart), _defineProperty(_objectSpread3, newFinish.id, newFinish), _objectSpread3))\n      });\n\n      _this.setState({\n        snippets: newSnippets\n      });\n    };\n\n    _this.state = {\n      snippets: snippetsStructured,\n      inputUrl: ''\n    };\n    _this.onDragEnd = _this.onDragEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onEncodeUrl = _this.onEncodeUrl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onDecodeUrl = _this.onDecodeUrl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onReset = _this.onReset.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"CAI URL / Brief Generator\"), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-10 col-sm-offset-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \" Welcome to CAI the brief generator \")), React.createElement(\"button\", {\n        onClick: this.onEncodeUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Done, create my URL\"), React.createElement(\"button\", {\n        onClick: this.onDecodeUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Unscramlbe this URL\"), React.createElement(\"button\", {\n        onClick: this.onDecodeUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \" Clear \"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.onInputUrl,\n        value: this.state.inputUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \" Reset \"), React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, this.state.snippets.columnOrder.map(function (columnId) {\n        var column = _this2.state.snippets.columns[columnId];\n        var items = column.itemIds.map(function (itemId) {\n          return _this2.state.snippets.items[itemId];\n        });\n        return React.createElement(DragDropColumn, {\n          key: column.id,\n          column: column,\n          items: items,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/smallmighty/Projects/Westpac/two-way-url-generator-react/src/App.js"],"names":["React","Component","ReactDOM","DragDropContext","ControlledRow","DragDropSection","DragDropColumn","HashString","UrlParamaters","snippetsStructured","App","props","componentDidMount","snippetsMaster","JSON","parse","stringify","onEncodeUrl","e","codedSummary","encode","codedItems","state","snippets","columns","col1","itemIds","codedUrl","summary","items","objectify","alert","onDecodeUrl","retreivedItemsList","retreivedItemsIds","inputUrl","decode","split","console","log","availableItemsIds","Array","from","col2","selectedItemsIds","map","item","index","push","splice","indexOf","setState","onInputUrl","target","value","onReset","onDragEnd","result","destination","source","draggableId","droppableId","start","finish","newItemIds","newColumn","newSnippets","id","startItemIds","newStart","finishItemIds","newFinish","bind","columnOrder","columnId","column","itemId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport './style/gui.css'\n\n// Components\nimport ControlledRow from 'components/ControlledRow'\nimport DragDropSection from 'components/DragDropSection'\nimport DragDropColumn from 'components/DragDropColumn'\n\n// functions\nimport HashString from 'functions/HashString'\nimport UrlParamaters from 'functions/UrlParamaters'\n\n// feeds\nimport snippetsStructured from 'feed/snippetsStructured'\n// import contentSummariesJson from 'feed/summaries'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            snippets: snippetsStructured,\n            inputUrl: '',\n        }\n\n        this.onDragEnd = this.onDragEnd.bind(this)\n        this.onEncodeUrl = this.onEncodeUrl.bind(this)\n        this.onDecodeUrl = this.onDecodeUrl.bind(this)\n        this.onReset = this.onReset.bind(this)\n    }\n\n    componentDidMount = () => {\n        // to cut out some weird mutable data issues - clone the original data\n        this.snippetsMaster = JSON.parse(JSON.stringify(snippetsStructured))\n    }\n\n    onEncodeUrl = e => {\n        const codedSummary = HashString.encode('first')\n        const codedItems = HashString.encode(\n            this.state.snippets.columns.col1.itemIds\n        )\n        const codedUrl = UrlParamaters.stringify({\n            summary: codedSummary,\n            items: codedItems,\n        })\n\n        UrlParamaters.objectify(codedUrl)\n        alert(codedUrl)\n    }\n\n    // example url to test with ?summary=Zmlyc3Q=&items=c25pcDMsc25pcDE=\n\n    onDecodeUrl = e => {\n        let retreivedItemsList, retreivedItemsIds\n\n        // retreive items from the URL\n        if (this.state.inputUrl) {\n            retreivedItemsList =\n                UrlParamaters.objectify(this.state.inputUrl).items || ''\n            retreivedItemsIds = HashString.decode(retreivedItemsList).split(',')\n        } else {\n            console.log('ERROR in URL')\n            return\n        }\n\n        // TODO:\n        // 1. MUCH BETTER ERROR HANDLING FOR INPUT URLS\n        // 2. ACTUAL URL READER\n        // 3. SUMMARY CHOOSER AND DECODER\n\n        // reset so all data is back to first state\n        let snippets = JSON.parse(JSON.stringify(this.snippetsMaster))\n\n        let availableItemsIds = Array.from(snippets.columns.col2.itemIds)\n        let selectedItemsIds = []\n\n        retreivedItemsIds.map((item, index) => {\n            // build selectedIds\n            selectedItemsIds.push(item)\n            // remove from available Ids\n            availableItemsIds.splice(availableItemsIds.indexOf(item), 1)\n        })\n\n        snippets.columns.col1.itemIds = selectedItemsIds\n        snippets.columns.col2.itemIds = availableItemsIds\n\n        this.setState({\n            snippets: snippets,\n        })\n    }\n\n    onInputUrl = e => {\n        this.setState({\n            inputUrl: e.target.value,\n        })\n    }\n\n    onReset = e => {\n        console.log('THE WORLD EXPLODED')\n        this.setState({\n            snippets: JSON.parse(JSON.stringify(this.snippetsMaster)),\n        })\n    }\n\n    onDragEnd = result => {\n        const { destination, source, draggableId } = result\n\n        // if no destination, do nothing\n        if (!destination) {\n            return\n        }\n\n        // if no change, do nothing\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return\n        }\n\n        const start = this.state.snippets.columns[source.droppableId]\n        const finish = this.state.snippets.columns[destination.droppableId]\n\n        // moving within same column\n        if (start === finish) {\n            const newItemIds = Array.from(start.itemIds)\n            newItemIds.splice(source.index, 1)\n            newItemIds.splice(destination.index, 0, draggableId)\n\n            const newColumn = {\n                ...start,\n                itemIds: newItemIds,\n            }\n\n            const newSnippets = {\n                ...this.state.snippets,\n                columns: {\n                    ...this.state.snippets.columns,\n                    [newColumn.id]: newColumn,\n                },\n            }\n\n            this.setState({\n                snippets: newSnippets,\n            })\n            return\n        }\n\n        // moving to another column\n        const startItemIds = Array.from(start.itemIds)\n        startItemIds.splice(source.index, 1)\n        const newStart = {\n            ...start,\n            itemIds: startItemIds,\n        }\n\n        const finishItemIds = Array.from(finish.itemIds)\n        finishItemIds.splice(destination.index, 0, draggableId)\n        const newFinish = {\n            ...finish,\n            itemIds: finishItemIds,\n        }\n\n        const newSnippets = {\n            ...this.state.snippets,\n            columns: {\n                ...this.state.snippets.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            },\n        }\n\n        this.setState({\n            snippets: newSnippets,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    CAI URL / Brief Generator\n                </header>\n                <main>\n                    <div className=\"col-sm-10 col-sm-offset-1\">\n                        <h1> Welcome to CAI the brief generator </h1>\n                    </div>\n                    <button onClick={this.onEncodeUrl}>\n                        Done, create my URL\n                    </button>\n                    <button onClick={this.onDecodeUrl}>\n                        Unscramlbe this URL\n                    </button>\n                    <button onClick={this.onDecodeUrl}> Clear </button>\n                    <input\n                        type=\"text\"\n                        onChange={this.onInputUrl}\n                        value={this.state.inputUrl}\n                    />\n                    <button onClick={this.onReset}> Reset </button>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        {this.state.snippets.columnOrder.map(columnId => {\n                            const column = this.state.snippets.columns[columnId]\n                            const items = column.itemIds.map(\n                                itemId => this.state.snippets.items[itemId]\n                            )\n\n                            return (\n                                <DragDropColumn\n                                    key={column.id}\n                                    column={column}\n                                    items={items}\n                                />\n                            )\n                        })}\n                    </DragDropContext>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}